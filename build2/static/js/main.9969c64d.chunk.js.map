{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["App","id","go","fetchedUser","type","top","name","onChange","e","bridge","send","console","log","bottom","placeholder","value","size","React","Component","useState","activePanel","setActivePanel","popout","setPopout","useEffect","a","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"kxBAiLeA,EAtJH,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAA0B,EAAtBC,GAAsB,EAAlBC,YA2BtB,OACC,kBAAC,IAAD,CAAOF,GAAIA,GACV,kBAAC,IAAD,uCACA,kBAAC,IAAD,KACC,kBAAC,IAAD,CACCG,KAAK,QACLC,IAAI,SACJC,KAAK,QAELC,SAdY,SAAAC,GACfC,IAAOC,KAAK,0BAA2B,CAAC,KAAQ,CAAC,QAAS,WAC1DC,QAAQC,IAAI,UAiBV,kBAAC,IAAD,CAAiBP,IAAI,uCAASQ,OAAO,gSACpC,kBAAC,IAAD,CAAOT,KAAK,WAAWU,YAAY,oFACnC,kBAAC,IAAD,CAAOV,KAAK,WAAWU,YAAY,iGAGpC,kBAAC,IAAD,CAAOT,IAAI,uBACX,kBAAC,IAAD,CAAOA,IAAI,+CAEX,kBAAC,IAAD,CAAQA,IAAI,qBAAMS,YAAY,uEAC7B,4BAAQC,MAAM,KAAd,8CACA,4BAAQA,MAAM,KAAd,+CAGD,kBAAC,IAAD,CAAiBV,IAAI,6EACpB,kBAAC,IAAD,CAAOC,KAAK,QAAZ,8CACA,kBAAC,IAAD,CAAOA,KAAK,QAAZ,yCAGD,kBAAC,IAAD,CACCD,IAAI,sEACJS,YAAY,uHAKZR,KAAK,WAEL,4BAAQS,MAAM,KAAd,gGACA,4BAAQA,MAAM,KAAd,6HACA,4BAAQA,MAAM,KAAd,qLAGD,kBAAC,IAAD,CAAUV,IAAI,oCAEd,kBAAC,IAAD,+FAA2B,kBAAC,IAAD,kCAC3B,kBAAC,IAAD,CAAQW,KAAK,MAAb,mHCoHWhB,GA/LOiB,IAAMC,UA0GhB,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVhB,EAFU,aAGWgB,mBAAS,kBAAC,IAAD,CAAeH,KAAK,YAHxC,mBAGVM,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CASf,sBAAAC,EAAA,sDAGCF,EAAU,MAHX,4CATe,sBACfd,IAAOiB,WAAU,YAAiC,IAAD,IAA7BC,OAAUvB,EAAmB,EAAnBA,KAAMwB,EAAa,EAAbA,KACnC,GAAa,yBAATxB,EAAiC,CACpC,IAAMyB,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBd,MAAQa,EAAKI,OAASJ,EAAKI,OAAS,eACpDF,SAASG,KAAKC,WAAWC,aAAaN,GAEvClB,QAAQC,IAAIR,EAAMwB,MAPJ,mCAcfQ,KACE,IAMH,OACC,kBAAC,IAAD,CAAMhB,YAAaA,EAAaE,OAAQA,GACvC,kBAAC,EAAD,CAAMrB,GAAG,OAAOE,YAAaA,EAAaD,GANjC,SAAAM,GACVa,EAAeb,EAAE6B,cAAcC,QAAQC,UCpJzC9B,IAAOC,KAAK,gBAEZ8B,IAASC,OAAO,kBAAC,EAAD,MAASX,SAASY,eAAe,W","file":"static/js/main.9969c64d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes, { func } from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport TabsItem from '@vkontakte/vkui/dist/components/TabsItem/TabsItem';\nimport Tabs from '@vkontakte/vkui/dist/components/Tabs/Tabs';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport FormLayoutGroup from '@vkontakte/vkui/dist/components/FormLayoutGroup/FormLayoutGroup';\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\n\nimport Select from '@vkontakte/vkui/dist/components/Select/Select';\nimport Radio from '@vkontakte/vkui/dist/components/Radio/Radio';\nimport Textarea from '@vkontakte/vkui/dist/components/Textarea/Textarea';\nimport Checkbox from '@vkontakte/vkui/dist/components/Checkbox/Checkbox';\nimport Link from '@vkontakte/vkui/dist/components/Link/Link';\nimport View from '@vkontakte/vkui/dist/components/View/View';\n\nimport bridge from '@vkontakte/vk-bridge';\n\n\nconst App = ({ id, go, fetchedUser }) => {\n\t// const [activePanel, setActivePanel] = useState('home');\n\t// const [fetchedUser, setUser] = useState(null);\n\t// const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\t// useEffect(() => {\n\t// \tbridge.subscribe(({ detail: { type, data } }) => {\n\t// \t\tif (type === 'VKWebAppUpdateConfig') {\n\t// \t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t// \t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t// \t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t// \t\t}\n\t// \t\tconsole.log(type, data)\n\t// \t});\n\t// \tasync function fetchData() {\n\t// \t\t// const user = await bridge.send('VKWebAppGetUserInfo');\n\t// \t\t// setUser(user);\n\t// \t\tsetPopout(null);\n\t// \t}\n\t// \tfetchData();\n\t// }, []);\n\n\tconst onClick = e => {\n\t\tbridge.send(\"VKWebAppGetPersonalCard\", {\"type\": [\"phone\", \"email\"]});\n\t\tconsole.log(\"asd\")\n\t};\n\n\treturn (\n\t\t<Panel id={id}>\n\t\t\t<PanelHeader>Форма</PanelHeader>\n\t\t\t<FormLayout>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\ttop=\"E-mail\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\t//   value={email}\n\t\t\t\t\tonChange={onClick}\n\t\t\t\t//   status={email ? 'valid' : 'error'}\n\t\t\t\t//   bottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n\t\t\t\t/>\n\n\t\t\t\t<FormLayoutGroup top=\"Пароль\" bottom=\"Пароль может содержать только латинские буквы и цифры.\">\n\t\t\t\t\t<Input type=\"password\" placeholder=\"Введите пароль\" />\n\t\t\t\t\t<Input type=\"password\" placeholder=\"Повторите пароль\" />\n\t\t\t\t</FormLayoutGroup>\n\n\t\t\t\t<Input top=\"Имя\" />\n\t\t\t\t<Input top=\"Фамилия\" />\n\n\t\t\t\t<Select top=\"Пол\" placeholder=\"Выберите пол\">\n\t\t\t\t\t<option value=\"m\">Мужской</option>\n\t\t\t\t\t<option value=\"f\">Женский</option>\n\t\t\t\t</Select>\n\n\t\t\t\t<FormLayoutGroup top=\"Тип документа\">\n\t\t\t\t\t<Radio name=\"type\">Паспорт</Radio>\n\t\t\t\t\t<Radio name=\"type\">Загран</Radio>\n\t\t\t\t</FormLayoutGroup>\n\n\t\t\t\t<Select\n\t\t\t\t\ttop=\"Цель поездки\"\n\t\t\t\t\tplaceholder=\"Выберите цель поездки\"\n\t\t\t\t\t//   status={purpose ? 'valid' : 'error'}\n\t\t\t\t\t//   bottom={purpose ? '' : 'Пожалуйста, укажите цель поездки'}\n\t\t\t\t\t//   onChange={this.onChange}\n\t\t\t\t\t//   value={purpose}\n\t\t\t\t\tname=\"purpose\"\n\t\t\t\t>\n\t\t\t\t\t<option value=\"0\">Бизнес или работа</option>\n\t\t\t\t\t<option value=\"1\">Индивидуальный туризм</option>\n\t\t\t\t\t<option value=\"2\">Посещение близких родственников</option>\n\t\t\t\t</Select>\n\n\t\t\t\t<Textarea top=\"О себе\" />\n\n\t\t\t\t<Checkbox>Согласен со всем <Link>этим</Link></Checkbox>\n\t\t\t\t<Button size=\"xl\">Зарегистрироваться</Button>\n\t\t\t</FormLayout>\n\t\t</Panel>\n\t);\n}\nconst Home = ({ id, go, fetchedUser }) => (\n\n\t<Panel id={id}>\n\t\t<PanelHeader>Форма</PanelHeader>\n\t\t<FormLayout>\n\t\t\t<Input\n\t\t\t\ttype=\"email\"\n\t\t\t\ttop=\"E-mail\"\n\t\t\t\tname=\"email\"\n\t\t\t\t//   value={email}\n\t\t\t\tonChange={this.onClick}\n\t\t\t//   status={email ? 'valid' : 'error'}\n\t\t\t//   bottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n\t\t\t/>\n\n\t\t\t<FormLayoutGroup top=\"Пароль\" bottom=\"Пароль может содержать только латинские буквы и цифры.\">\n\t\t\t\t<Input type=\"password\" placeholder=\"Введите пароль\" />\n\t\t\t\t<Input type=\"password\" placeholder=\"Повторите пароль\" />\n\t\t\t</FormLayoutGroup>\n\n\t\t\t<Input top=\"Имя\" />\n\t\t\t<Input top=\"Фамилия\" />\n\n\t\t\t<Select top=\"Пол\" placeholder=\"Выберите пол\">\n\t\t\t\t<option value=\"m\">Мужской</option>\n\t\t\t\t<option value=\"f\">Женский</option>\n\t\t\t</Select>\n\n\t\t\t<FormLayoutGroup top=\"Тип документа\">\n\t\t\t\t<Radio name=\"type\">Паспорт</Radio>\n\t\t\t\t<Radio name=\"type\">Загран</Radio>\n\t\t\t</FormLayoutGroup>\n\n\t\t\t<Select\n\t\t\t\ttop=\"Цель поездки\"\n\t\t\t\tplaceholder=\"Выберите цель поездки\"\n\t\t\t\t//   status={purpose ? 'valid' : 'error'}\n\t\t\t\t//   bottom={purpose ? '' : 'Пожалуйста, укажите цель поездки'}\n\t\t\t\t//   onChange={this.onChange}\n\t\t\t\t//   value={purpose}\n\t\t\t\tname=\"purpose\"\n\t\t\t>\n\t\t\t\t<option value=\"0\">Бизнес или работа</option>\n\t\t\t\t<option value=\"1\">Индивидуальный туризм</option>\n\t\t\t\t<option value=\"2\">Посещение близких родственников</option>\n\t\t\t</Select>\n\n\t\t\t<Textarea top=\"О себе\" />\n\n\t\t\t<Checkbox>Согласен со всем <Link>этим</Link></Checkbox>\n\t\t\t<Button size=\"xl\">Зарегистрироваться</Button>\n\t\t</FormLayout>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\n\nexport default App;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout';\nimport TabsItem from '@vkontakte/vkui/dist/components/TabsItem/TabsItem';\nimport Tabs from '@vkontakte/vkui/dist/components/Tabs/Tabs';\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport FormLayoutGroup from '@vkontakte/vkui/dist/components/FormLayoutGroup/FormLayoutGroup';\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\nimport Select from '@vkontakte/vkui/dist/components/Select/Select';\nimport Radio from '@vkontakte/vkui/dist/components/Radio/Radio';\nimport Textarea from '@vkontakte/vkui/dist/components/Textarea/Textarea';\nimport Checkbox from '@vkontakte/vkui/dist/components/Checkbox/Checkbox';\nimport Link from '@vkontakte/vkui/dist/components/Link/Link';\n\n\nclass Example extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpurpose: '',\n\t\t\treq_contact: true,\n\t\t}\n\n\t\tthis.addressItems = [\n\t\t\t{ label: 'Почтовый индекс', name: 'zip' },\n\t\t\t{ label: 'Страна', name: 'country' },\n\t\t\t{ label: 'Город', name: 'city' }\n\t\t];\n\n\t\tthis.onChange = this.onChange.bind(this);\n\t}\n\n\tonChange(e) {\n\t\tconst { name, value } = e.currentTarget;\n\t\tthis.setState({ [name]: value });\n\t}\n\tonClick(e) {\n\t\t// if (this.state.req_contact == true) {\n\t\t// this.setState({ req_contact: false });\n\t\tbridge\n\t\t\t.send('VKWebAppGetPersonalCard', { \"type\": [\"phone\", \"email\"] })\n\t\t\t.then(data => {\n\t\t\t\t// Обработка события в случае успеха\n\t\t\t\tconsole.log(data);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t\t// Обработка события в случае ошибки\n\t\t\t});\n\t\t// bridge.send(\"VKWebAppGetPersonalCard\", { \"type\": [\"phone\", \"email\"] });\n\t\t// }\n\t}\n\n\trender() {\n\t\tconst { email, purpose, req_contact } = this.state;\n\n\t\treturn (\n\t\t\t<View activePanel=\"new-user\">\n\t\t\t\t<Panel id=\"new-user\">\n\t\t\t\t\t<PanelHeader>Регистрация</PanelHeader>\n\t\t\t\t\t<FormLayout>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\ttop=\"E-mail\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\tonClick={this.onClick}\n\t\t\t\t\t\t\tstatus={email ? 'valid' : 'error'}\n\t\t\t\t\t\t\tbottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<FormLayoutGroup top=\"Пароль\" bottom=\"Пароль может содержать только латинские буквы и цифры.\">\n\t\t\t\t\t\t\t<Input type=\"password\" placeholder=\"Введите пароль\" />\n\t\t\t\t\t\t\t<Input type=\"password\" placeholder=\"Повторите пароль\" />\n\t\t\t\t\t\t</FormLayoutGroup>\n\n\t\t\t\t\t\t<Input top=\"Имя\" />\n\t\t\t\t\t\t<Input top=\"Фамилия\" />\n\n\t\t\t\t\t\t<Select top=\"Пол\" placeholder=\"Выберите пол\">\n\t\t\t\t\t\t\t<option value=\"m\">Мужской</option>\n\t\t\t\t\t\t\t<option value=\"f\">Женский</option>\n\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t<FormLayoutGroup top=\"Тип документа\">\n\t\t\t\t\t\t\t<Radio name=\"type\">Паспорт</Radio>\n\t\t\t\t\t\t\t<Radio name=\"type\">Загран</Radio>\n\t\t\t\t\t\t</FormLayoutGroup>\n\n\t\t\t\t\t\t{this.addressItems.map(({ label, name }) => (\n\t\t\t\t\t\t\t<Input type=\"text\" name={name} key={name} top={label} />\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\ttop=\"Цель поездки\"\n\t\t\t\t\t\t\tplaceholder=\"Выберите цель поездки\"\n\t\t\t\t\t\t\tstatus={purpose ? 'valid' : 'error'}\n\t\t\t\t\t\t\tbottom={purpose ? '' : 'Пожалуйста, укажите цель поездки'}\n\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\tvalue={purpose}\n\t\t\t\t\t\t\tname=\"purpose\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option value=\"0\">Бизнес или работа</option>\n\t\t\t\t\t\t\t<option value=\"1\">Индивидуальный туризм</option>\n\t\t\t\t\t\t\t<option value=\"2\">Посещение близких родственников</option>\n\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t<Textarea top=\"О себе\" />\n\n\t\t\t\t\t\t<Checkbox>Согласен со всем <Link>этим</Link></Checkbox>\n\t\t\t\t\t\t<Button size=\"xl\">Зарегистрироваться</Button>\n\t\t\t\t\t</FormLayout>\n\t\t\t\t</Panel>\n\t\t\t</View>\n\t\t);\n\t}\n}\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data } }) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t\tconsole.log(type, data)\n\t\t});\n\t\tasync function fetchData() {\n\t\t\t// const user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\t// setUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t{/* <Panel id=\"new-user\">\n\t\t\t\t<PanelHeader>Регистрация</PanelHeader>\n\t\t\t\t<FormLayout>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\ttop=\"E-mail\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t// value={email}\n\t\t\t\t\t// onChange={this.onChange}\n\t\t\t\t\t// onClick={this.onClick}\n\t\t\t\t\t// status={email ? 'valid' : 'error'}\n\t\t\t\t\t// bottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<FormLayoutGroup top=\"Пароль\" bottom=\"Пароль может содержать только латинские буквы и цифры.\">\n\t\t\t\t\t\t<Input type=\"password\" placeholder=\"Введите пароль\" />\n\t\t\t\t\t\t<Input type=\"password\" placeholder=\"Повторите пароль\" />\n\t\t\t\t\t</FormLayoutGroup>\n\n\t\t\t\t\t<Input top=\"Имя\" />\n\t\t\t\t\t<Input top=\"Фамилия\" />\n\n\t\t\t\t\t<Select top=\"Пол\" placeholder=\"Выберите пол\">\n\t\t\t\t\t\t<option value=\"m\">Мужской</option>\n\t\t\t\t\t\t<option value=\"f\">Женский</option>\n\t\t\t\t\t</Select>\n\n\t\t\t\t\t<FormLayoutGroup top=\"Тип документа\">\n\t\t\t\t\t\t<Radio name=\"type\">Паспорт</Radio>\n\t\t\t\t\t\t<Radio name=\"type\">Загран</Radio>\n\t\t\t\t\t</FormLayoutGroup>\n\n\t\t\t\t\t<Select\n\t\t\t\t\t\ttop=\"Цель поездки\"\n\t\t\t\t\t\tplaceholder=\"Выберите цель поездки\"\n\t\t\t\t\t\t// status={purpose ? 'valid' : 'error'}\n\t\t\t\t\t\t// bottom={purpose ? '' : 'Пожалуйста, укажите цель поездки'}\n\t\t\t\t\t\t// onChange={this.onChange}\n\t\t\t\t\t\t// value={purpose}\n\t\t\t\t\t\tname=\"purpose\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"0\">Бизнес или работа</option>\n\t\t\t\t\t\t<option value=\"1\">Индивидуальный туризм</option>\n\t\t\t\t\t\t<option value=\"2\">Посещение близких родственников</option>\n\t\t\t\t\t</Select>\n\n\t\t\t\t\t<Textarea top=\"О себе\" />\n\n\t\t\t\t\t<Checkbox>Согласен со всем <Link>этим</Link></Checkbox>\n\t\t\t\t\t<Button size=\"xl\">Зарегистрироваться</Button>\n\t\t\t\t</FormLayout>\n\t\t\t</Panel> */}\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}